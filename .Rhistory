_HiStOrY_V2_
?sample
x\040<-\0401:200
sample(x,size=17)
x\040<-\0401:500
sample(x,size=125)
z\040<-\040sample(x,size=72)
z
x\040<-\0401:350
z\040<-\040sample(x,size=45)
z
demand\040<-\040read.csv("~/r_data/demand.csv",\040header=FALSE)
View(demand)
attach(demand)
head(demand)
ols\040<-\040lm(q~p)
demand\040<-\040read.csv("~/r_data/demand.csv")
View(demand)
attach(demand)
ols\040<-\040lm(q~p)
summary(ols)
mn
sample(100,\040size=23)
sample(100,size=20)
install.packages("AER")
library(AER)
install.packages("car")
install.packages("manipulate")
install.packages("manipulate")
install.packages(c("Matrix",\040"XML",\040"manipulate"))
install.packages("nlts")
contributors()
install.packages("manipulate")
install.packages("vars")
install.packages("mfilter")
install.packages("mFilter")
library(mFilter)
data(unemp)
view(unemp)
attach(unemp)
unemp
unemp.hp\040<-\040mFilter(unemp,filter\040=\040"HP")
plot(unemp.hp)
install.packages("markdown")
plot(unemp.hp)
??help
help.search(endogeneity)
help.request(endogeneity)
help.search(endog)
??var
??ivreg
install.packages(c("foreign",\040"knitr",\040"nlme"))
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
e\040<-\040rnorm(300)
plot.ts(e)
y\040<-\040cumsum(e)
plot.ts(y)
plot.ts(diff(y))
e\040<-\040rnorm(1000)
plot.ts(e)
y\040<-\040cumsum(e)
plot.ts(y)
install.packages("knitr")
library(urca)
data("Raotbl3")
view("Raotbl3")
?View
View("Raotbl3")
View(Raotbl3)
attach("Raotbl3")
?attach
attach(Raotbl3)
lc.df\040<-\040ur.df(y=lc,\040lags=3,\040type=
'
trend)
'
)
lc.df\040<-\040ur.df(y=lc,\040lags\040=\0403,\040type\040=\040"trend")
summary(lc.df)
data()
data("denmark")
View(denmark)
data(denmark)
sjd\040<-\040denmark[,\040c("LRM",\040"LRY",\040"IBO",\040"IDE")]
sjd.vecm\040<-\040ca.jo(sjd,\040ecdet\040=\040"const",\040type="eigen",\040K=2,\040spec="longrun",\^M\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040\040season=4)
sjd.vecm\040<-\040ca.jo(sjd,\040ecdet\040=\040"const",\040type="eigen",\040K=2,\040spec="longrun",\040season=4)
summary(sjf.vecm)
summary(sjf.vecm)
summary(sjf.vecm)
sjd.vecm\040<-\040ca.jo(sjd,\040ecdet\040=\040"const",\040type="eigen",\040K=2,\040spec="longrun",\040season=4)
summary(sjd.vecm)
e\040<-\040rnorm(1000)
plot.ts(e)
y\040=\040cumsum(e)
plot.ts(y)
?summary
summary(e)
summary(sjd)
rm(list\040=\040ls())
rm(list\040=\040ls())
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
library(knitr)
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
macp1\040<-\040read.csv("~/tra_business_cycle/macp1.csv")
View(macp1)
plot.ts(lgdp)
attach(macp1)
plot.ts(lgdp)
library(mFilter)
install.packages("knitr")
gdp.hp\040<-\040hpfilter(lgdp,\040freq=800,\040drift=TRUE)
library(mFilter)
gdp.hp\040<-\040hpfilter(lgdp,\040freq=800,\040drift=TRUE)
attach(macp1)
macp1\040<-\040read.csv("~/tra_business_cycle/macp1.csv")
View(macp1)
attach(macp1)
gdp.hp\040<-\040hpfilter(lgdp,\040freq=800,\040drift=TRUE)
plot.ts(gdp.hp)
gdp.hp
gdp.hp\040<-\040hpfilter(lgdp,\040freq=15,\040drift=TRUE)
gdp.hp
install.packages(c("V8",\040"knitr"))
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
curve(2*x^2\040+\0402,\040x,\040from\040=\0401\040to\040=\04010)
curve(2*x^2\040+\0402,\040x,\040from\040=\0401,\040to\040=\04010)
x\040<-\0401:20
curve(2*x^2\040+\0402,\040x,\040from\040=\0401,\040to\040=\04010)
x
ls()
rm(list\040=\040ls())
x\040<-\0401:10
y\040<-\040x^2\040-\04010
plot(x,y)
plot(x,y,type\040=\040"l")
curve(x^2,\040from\040=\0401,\040to\040=\04010)
version
b_cycles_data <- read.csv("~/tra_business_cycle/b_cycles_data.csv")
View(b_cycles_data)
attach(b_cycles_data)
plot.ts(m1)
lmi <- log(m1)
plot.ts(lm1)
plot.ts(lmi)
plot.ts(eduties)
library(mFilter)
?np
??np
demo(package = "AER")
demo(package = "np")
demo(package = "urca")
demo(package = "gmm")
library(gmm)
library(gmm)
demo(package = "gmm")
demo(package = "vars")
demo(package = "MASS")
library(checkpoint)
version
install.packages(c("foreign", "nlme", "rgl"))
install.packages("rgl")
install.packages("rgl")
install.packages("rgl")
install.packages("rgl")
install.packages(c("rgl", "rglobi", "Rglpk"))
install.packages("rgl")
library(lmtest)
library(MTS)
install.packages("MTS")
install.packages("MTS")
library(MTS)
xt=matrix(rnorm(1500),500,3)
ccm(xt)
install.packages("rgl")
install.packages("rgl")
install.packages("rgl")
install.packages("rgl")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
t_revenue_gdp <- read.csv("~/tra_business_cycle/t_revenue_gdp.csv")
View(t_revenue_gdp)
rm(list = ls())
t_rev_gdp <- read.csv("~/tra_business_cycle/t_rev_gdp.csv")
View(t_rev_gdp)
attach(t_rev_gdp)
percent <- ts(percent,start = 1999,end = 2014)
plot.ts(percent)
?plot.ts
?plot
plot.ts(percent,xaxp = (1996,2014,3))
plot(year,percent,xaxp = (1996,2014,4))
plot(year,percent,xaxp = c(1996,2014,4))
plot(year,percent,xaxp = c(1996,2014,4))
plot.ts(percent,xaxp = c(1996,2014,3))
plot.ts(percent,xaxp = c(1996,2014,2))
plot.ts(percent,xaxp = c(1996,2014,6))
plot.ts(percent,xaxp = c(1996,2014,6),main = "Tax revenue as % of GDP")
plot.ts(percent,xaxp = c(1996,2014,6))
plot.ts(percent,xaxp = c(1996,2014,6),bty = "l")
plot.ts(percent,xaxp = c(1996,2014,8),bty = "l")
plot.ts(percent,xaxp = c(1996,2014,6),bty = "l")
rm(list = ls())
require(MTS)
xt=matrix(rnorm(1500),500,3)
MTSplot(xt)
xt
install.packages("rgl")
devtools::install_github("rstudio/shiny")
install.packages("devtools")
devtools::install_github("rstudio/shiny")
devtools::install_github("rstudio/miniUI")
devtools::install_github("rstudio/addinexamples")
devtools::install_github("rstudio/htmltools")
Addins
??Addins
?Addins
addinexamples:::reformatAddin()
addinexamples:::reformatAddin()
install.packages("tidyr")
install.packages("readr")
install.packages("lubridate")
install.packages("stringr")
clean()
library(packrat)
clean()
??varirf
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
warnings()
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
summary(mn)
source('~/.active-rstudio-document', echo=TRUE)
summary(mn)
summary(mn)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
influence.measures(mn)
influence.measures(mn)$is.inf
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
install.packages("shiny")
View(ivreg2)
getOption("repos")
addinexamples:::reformatAddin()
Rapp.update
Rapp.pdate
Rapp.p
Rapp.
source('~/r_emts/nts_nelplos.R', echo=TRUE)
debugSource('~/r_emts/nts_nelplos.R', echo=TRUE)
debugSource('~/r_emts/nts_nelplos.R', echo=TRUE)
debugSource('~/r_emts/nts_nelplos.R', echo=TRUE)
update.packages()
update.packages()
?update.packages()
new.packages()
?new.packages
?new.packages
old.packages()
install.packages("mfx")
install.packages("haven")
par((mfrow = c(1,2)))
par(mfrow = c(1,2)))
par(mfrow = c(1,2))
par(mfrow = c(1,2))
plot.ts(lngdp, ylim = c(4.5,17), ylab = "Logarithm", col = "red", bty = "l",
lwd = 2)
lines(lttaxrevenue, col = "blue", lwd = 2)
legend("topleft",legend = c("GDP","Tax Revenue"), lty = 1,
col = c("red", "blue"), bty = "n", cex = 0.8,
text.col = c("red", "blue"))
plot.ts(lngdp, ylim = c(4.5,17), ylab = "Logarithm", col = "red", bty = "l",
lwd = 2)
lines(lincome, col = "blue", lwd = 2)
legend("topleft",legend = c("GDP","Income Tax"), lty = 1,
col = c("red", "blue"), bty = "n", cex = 0.8,
text.col = c("red", "blue"))
rm(list = ls())
setwd("~/tra_business_cycle")
sink(file = "b_cycle_var",append = FALSE)
# Opening data file
b_cycle_data <- read.csv("b_cycle_data.csv")
# View(b_cycle_data)
attach(b_cycle_data)
# Taking logs of variables
lgdp <- log(gdp2001)
lrexp <- log(rexp)
ldexp <- log(dexp)
ltexp <- log((rexp + dexp))
lm1 <- log(m1)
lm2 <- log(m2)
lm3 <- log(m3)
leduties <- log(eduties)
lincome <- log(income)
lothers <- log(others)
lttaxrevenue <- log(ttaxrevenue)
lexrate <- log(exrate)
# Time series variables
lgdp <- ts(lgdp, start = 1966, end = 2010, frequency = 1)
lngdp <- ts(log(gdp), start = 1966, end = 2010, frequency = 1)
lrexp <- ts(lrexp, start = 1966, end = 2010, frequency = 1)
ldexp <- ts(ldexp, start = 1966, end = 2010, frequency = 1)
ltexp <- ts(ltexp, start = 1966, end = 2010, frequency = 1)
lm2 <- ts(lm2, start = 1966, end = 2010, frequency = 1)
leduties <- ts(leduties, start = 1966, end = 2010, frequency = 1)
lincome <- ts(lincome, start = 1966, end = 2010, frequency = 1)
lothers <- ts(lothers, start = 1966, end = 2010, frequency = 1)
lttaxrevenue <- ts(lttaxrevenue, start = 1966, end = 2010, frequency = 1)
inflation <- ts(inflation, start = 1966, end = 2010, frequency = 1)
exrate <- ts(exrate, start = 1966, end = 2010, frequency = 1)
library(vars)
library(urca)
y <- cbind(lngdp, lm2)
VARselect(y,lag.max = 3, type = "both")
varmodel <- VAR(y, p = 1, type = "both", ic = "SC")
summary(varmodel)
causality(varmodel, cause = "lngdp", vcovHC(varmodel))
causality(varmodel, cause = "lm2", vcovHC(varmodel))
fevd(varmodel, n.ahead = 20)
x <- cbind(lttaxrevenue, lngdp)
z <- cbind(lincome, lngdp)
catax <- ca.po(x, type = "Pz")
summary(catax)
par(mfrow = c(1,2))
plot.ts(lngdp, ylim = c(4.5,17), ylab = "Logarithm", col = "red", bty = "l",
lwd = 2)
lines(lttaxrevenue, col = "blue", lwd = 2)
legend("topleft",legend = c("GDP","Tax Revenue"), lty = 1,
col = c("red", "blue"), bty = "n", cex = 0.8,
text.col = c("red", "blue"))
plot.ts(lngdp, ylim = c(4.5,17), ylab = "Logarithm", col = "red", bty = "l",
lwd = 2)
lines(lincome, col = "blue", lwd = 2)
legend("topleft",legend = c("GDP","Income Tax"), lty = 1,
col = c("red", "blue"), bty = "n", cex = 0.8,
text.col = c("red", "blue"))
ts.plot(lincome,leduties)
rm(list = ls())
setwd("~/tra_business_cycle")
sink(file = "b_cycle_var",append = FALSE)
# Opening data file
b_cycle_data <- read.csv("b_cycle_data.csv")
# View(b_cycle_data)
attach(b_cycle_data)
# Taking logs of variables
lgdp <- log(gdp2001)
lrexp <- log(rexp)
ldexp <- log(dexp)
ltexp <- log((rexp + dexp))
lm1 <- log(m1)
lm2 <- log(m2)
lm3 <- log(m3)
leduties <- log(eduties)
lincome <- log(income)
lothers <- log(others)
lttaxrevenue <- log(ttaxrevenue)
lexrate <- log(exrate)
# Time series variables
lgdp <- ts(lgdp, start = 1966, end = 2010, frequency = 1)
lngdp <- ts(log(gdp), start = 1966, end = 2010, frequency = 1)
lrexp <- ts(lrexp, start = 1966, end = 2010, frequency = 1)
ldexp <- ts(ldexp, start = 1966, end = 2010, frequency = 1)
ltexp <- ts(ltexp, start = 1966, end = 2010, frequency = 1)
lm2 <- ts(lm2, start = 1966, end = 2010, frequency = 1)
leduties <- ts(leduties, start = 1966, end = 2010, frequency = 1)
lincome <- ts(lincome, start = 1966, end = 2010, frequency = 1)
lothers <- ts(lothers, start = 1966, end = 2010, frequency = 1)
lttaxrevenue <- ts(lttaxrevenue, start = 1966, end = 2010, frequency = 1)
inflation <- ts(inflation, start = 1966, end = 2010, frequency = 1)
exrate <- ts(exrate, start = 1966, end = 2010, frequency = 1)
library(vars)
library(urca)
y <- cbind(lngdp, lm2)
VARselect(y,lag.max = 3, type = "both")
varmodel <- VAR(y, p = 1, type = "both", ic = "SC")
summary(varmodel)
causality(varmodel, cause = "lngdp", vcovHC(varmodel))
causality(varmodel, cause = "lm2", vcovHC(varmodel))
fevd(varmodel, n.ahead = 20)
x <- cbind(lttaxrevenue, lngdp)
z <- cbind(lincome, lngdp)
catax <- ca.po(x, type = "Pz")
summary(catax)
par(mfrow = c(1,2))
plot.ts(lngdp, ylim = c(4.5,17), ylab = "Logarithm", col = "red", bty = "l",
lwd = 2)
lines(leduties, col = "blue", lwd = 2)
legend("topleft",legend = c("GDP","Import duty"), lty = 1,
col = c("red", "blue"), bty = "n", cex = 0.8,
text.col = c("red", "blue"))
plot.ts(lngdp, ylim = c(4.5,17), ylab = "Logarithm", col = "red", bty = "l",
lwd = 2)
lines(lincome, col = "blue", lwd = 2)
legend("topleft",legend = c("GDP","Income Tax"), lty = 1,
col = c("red", "blue"), bty = "n", cex = 0.8,
text.col = c("red", "blue"))
